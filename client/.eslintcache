[{"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/index.js":"1","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/App.js":"2","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/reportWebVitals.js":"3","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/CompanyForm.js":"4","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/pages/company/CompanyPage.js":"5","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/utils/queries.js":"6","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/utils/mutations.js":"7","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/JobForm.js":"8","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/pages/home/Home.js":"9","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/CompanyCard.js":"10","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/JobCard.js":"11"},{"size":500,"mtime":1631293365473,"results":"12","hashOfConfig":"13"},{"size":1109,"mtime":1632166228221,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1631293365475,"results":"15","hashOfConfig":"13"},{"size":1198,"mtime":1632165367931,"results":"16","hashOfConfig":"13"},{"size":943,"mtime":1632274612118,"results":"17","hashOfConfig":"13"},{"size":2485,"mtime":1631899844528,"results":"18","hashOfConfig":"13"},{"size":1762,"mtime":1632164824319,"results":"19","hashOfConfig":"13"},{"size":2827,"mtime":1632272050423,"results":"20","hashOfConfig":"13"},{"size":782,"mtime":1631901345353,"results":"21","hashOfConfig":"13"},{"size":418,"mtime":1632274608804,"results":"22","hashOfConfig":"13"},{"size":754,"mtime":1632273481578,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ncog9e",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/index.js",[],["49","50"],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/App.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/reportWebVitals.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/CompanyForm.js",["51"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_COMPANY } from '../utils/mutations';\n\nfunction CompanyForm(props) {\n  const [company, setCompany] = useState({ name: '', description: '' });\n  const [addCompany, { error }] = useMutation(ADD_COMPANY);\n\n  const handleFormSubmit = async (event) => {\n    console.log('HandleSubmit function');\n    event.preventDefault();\n    console.log(company);\n    try {\n      const { data } = await addCompany({\n        variables: {\n          ...company,\n        },\n      });\n      console.log(`\\n DATA: ${data}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    console.log(event.target);\n    setCompany({ ...company, [name]: value });\n\n    console.log(company);\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <label>Company Name:</label>\n      <input type=\"text\" name=\"name\" onChange={handleChange} />\n      <label>Description:</label>\n      <input type=\"text\" name=\"description\" onChange={handleChange} />\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n  );\n}\n\nexport default CompanyForm;\n","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/pages/company/CompanyPage.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/utils/queries.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/utils/mutations.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/JobForm.js",["52"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_JOB } from '../utils/mutations';\n\nfunction JobForm(props) {\n  const [job, setJob] = useState({ jobTitle: '', description: '', experience: '',  });\n  const [addJob, { error }] = useMutation(ADD_JOB);\n\n  const handleFormSubmit = async (event) => {\n    console.log('HandleSubmit function');\n    event.preventDefault();\n    console.log(job);\n    try {\n      const { data } = await addJob({\n        variables: {\n          ...job,\n        },\n      });\n      console.log(`\\n DATA: ${data}`);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    console.log(event.target);\n    setJob({ ...job, [name]: value });\n\n    console.log(job);\n  };\n    return (\n        <div>\n            <form onSubmit={handleFormSubmit}>\n                <label for=\"JobTitle\">\n                Job Title:\n             <input id=\"JobTitle\" type=\"text\" name=\"jobTitle\" onChange={handleChange}/>\n               </label><br></br>\n                               \n                <label for=\"Description\">\n                Description:\n             <input id=\"Description\" type=\"text\" name=\"description\" onChange={handleChange}/>\n               </label><br></br>\n\n                <label for=\"Experience\">\n                Experience:\n             <input id=\"Experience\" type=\"text\" name=\"experience\" onChange={handleChange}/>\n               </label><br></br>\n\n                <label for=\"City\">\n                City:\n             <input id=\"City\" type=\"text\" name=\"city\" onChange={handleChange}/>\n               </label><br></br>\n\n                <label for=\"State\">\n                State:\n             <input id=\"State\" type=\"text\" name=\"state\" onChange={handleChange}/>\n               </label><br></br>\n{/* Remote is a boolean, needs checkbox */}\n                <label for=\"Remote\">\n                Remote:\n             <input id=\"Remote\" type=\"text\" name=\"remote\" onChange={handleChange}/>\n               </label><br></br>\n{/* JobFound will be a hyperlink, needs to be clickable */}\n                <label for=\"JobFound\">\n                JobFound:\n             <input id=\"JobFound\" type=\"text\" name=\"jobfound\" onChange={handleChange}/>\n               </label><br></br>\n\n                <label for=\"Salary\">\n                Salary:\n             <input id=\"Salayr\" type=\"text\" name=\"salary\" onChange={handleChange}/>\n               </label><br></br>\n\n                <label for=\"Submited\">\n                Submited:\n             <input id=\"Submited\" type=\"text\" name=\"submited\" onChange={handleChange}/>\n               </label><br></br>\n\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n            \n        </div>\n    )\n}\n\nexport default JobForm;\n","/Users/jessicagiannini/Desktop/jobsearchlog/client/src/pages/home/Home.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/CompanyCard.js",[],"/Users/jessicagiannini/Desktop/jobsearchlog/client/src/components/JobCard.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":24,"nodeType":"59","messageId":"60","endLine":7,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":7,"column":20,"nodeType":"59","messageId":"60","endLine":7,"endColumn":25},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]
